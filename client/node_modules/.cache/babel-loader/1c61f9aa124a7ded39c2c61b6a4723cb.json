{"ast":null,"code":"import _classCallCheck from \"/Users/djkoons/Desktop/Online-Class/Homework/Homework-17/Google-Books-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/djkoons/Desktop/Online-Class/Homework/Homework-17/Google-Books-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/djkoons/Desktop/Online-Class/Homework/Homework-17/Google-Books-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/djkoons/Desktop/Online-Class/Homework/Homework-17/Google-Books-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/djkoons/Desktop/Online-Class/Homework/Homework-17/Google-Books-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/djkoons/Desktop/Online-Class/Homework/Homework-17/Google-Books-Search/client/src/pages/Saved/Saved.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, FormBtn } from \"../../components/Form\";\n\nvar Saved = /*#__PURE__*/function (_Component) {\n  _inherits(Saved, _Component);\n\n  function Saved() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Saved);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Saved)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      savedBooks: [],\n      q: \"\"\n    };\n\n    _this.loadBooks = function () {\n      API.getSaved().then(function (res) {\n        return _this.setState({\n          savedBooks: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Saved, [{\n    key: \"componentDidMount\",\n    // When the component mounts, load all books and save them to this.state.books\n    value: function componentDidMount() {\n      this.loadBooks();\n    } //   shortenUrl = book => {\n    //     return {\n    //       _id: book.id,\n    //       title: book.volumeInfo.title,\n    //       authors: book.volumeInfo.authors,\n    //       description: book.volumeInfo.description,\n    //       image: book.volumeInfo.imageLinks.thumbnail,\n    //       link: book.volumeInfo.previewLink\n    //     }\n    //   }\n    // Loads all books  and sets them to this.state.books\n\n  }, {\n    key: \"render\",\n    //   saveBooks = event => {\n    //     console.log('saved')\n    //     let saved = this.state.books.filter(book => book._id === event._id)\n    //     API.saveBook(saved)\n    //       .then(res => this.loadBooks())\n    //       .catch(err => console.log(err));\n    //   };\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"What Books Should I Read?\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        name: \"title\",\n        placeholder: \"Title (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(FormBtn // disabled={!(this.state.author && this.state.title)}\n      , {\n        onClick: this.handleFormSubmit // q = {this.state.q}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Submit Book\")))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.savedBooks.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.savedBooks.map(function (book) {\n        return React.createElement(ListItem, {\n          key: book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: book.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(\"a\", {\n          href: \"/books/\" + book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, book.title, \" by \", book.authors)), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, book.description));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Saved;\n}(Component);\n\nexport default Saved;","map":{"version":3,"sources":["/Users/djkoons/Desktop/Online-Class/Homework/Homework-17/Google-Books-Search/client/src/pages/Saved/Saved.js"],"names":["React","Component","Jumbotron","DeleteBtn","API","Col","Row","Container","List","ListItem","Input","FormBtn","Saved","state","savedBooks","q","loadBooks","getSaved","then","res","setState","data","catch","err","console","log","deleteBook","id","title","handleInputChange","handleFormSubmit","length","map","book","_id","image","authors","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, FormBtn } from \"../../components/Form\";\n\nclass Saved extends Component {\n  // Setting our component's initial state\n  state = {\n    savedBooks: [],\n    q: \"\"\n  };\n\n  // When the component mounts, load all books and save them to this.state.books\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n//   shortenUrl = book => {\n//     return {\n//       _id: book.id,\n//       title: book.volumeInfo.title,\n//       authors: book.volumeInfo.authors,\n//       description: book.volumeInfo.description,\n//       image: book.volumeInfo.imageLinks.thumbnail,\n//       link: book.volumeInfo.previewLink\n//     }\n//   }\n\n  // Loads all books  and sets them to this.state.books\n  loadBooks = () => {\n    API.getSaved()\n      .then(res => this.setState({ savedBooks: res.data}))\n      .catch(err => console.log(err));\n  };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n//   saveBooks = event => {\n//     console.log('saved')\n//     let saved = this.state.books.filter(book => book._id === event._id)\n//     API.saveBook(saved)\n//       .then(res => this.loadBooks())\n//       .catch(err => console.log(err));\n  \n//   };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>What Books Should I Read?</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.title}\n                onChange={this.handleInputChange}\n                name=\"title\"\n                placeholder=\"Title (required)\"\n              />\n              <FormBtn\n               // disabled={!(this.state.author && this.state.title)}\n                onClick={this.handleFormSubmit}\n                // q = {this.state.q}\n              >\n                Submit Book\n              </FormBtn>\n            </form>\n          </Col>\n          </Row>\n\n\n          <Row>\n          <Col size=\"sm-12\">\n            {/* <Jumbotron>\n              <h1>Books On My List</h1>\n            </Jumbotron> */}\n            {this.state.savedBooks.length ? (\n              <List>\n                {this.state.savedBooks.map(book => {\n                  return (\n                    <ListItem key={book._id}>\n                      {/* <DeleteBtn onClick={() => this.saveBooks(book._id)} /> */}\n                      <img src={book.image}/>\n                      <br></br>\n                      <a href={\"/books/\" + book._id}>\n                        <strong>\n                          {book.title} by {book.authors}\n                        </strong>\n                      </a>\n                      <p>\n                        {book.description}\n                      </p>\n                      \n                    </ListItem>\n                  );\n                })}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n          </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Saved;\n"]},"metadata":{},"sourceType":"module"}